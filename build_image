#!/bin/ash
#
# Build the custom emkey iSH image.  Assumes we are starting with the mini root from Alpine

# Set some variables
. AOK_VARS

# Get apk if not installed
if [ ! -f /sbin/apk ]; then
    echo "Installing APK"
    Files/bin/get_apk
fi

# First update apk DB

echo
echo "Initialize APK Database:"

# apk update
apk -U upgrade

echo
echo "Add a minimal number of packages to make iSH useful"
echo

apk add $CORE_APKS

# Chroot seems to be a bit broken.  When busybox-extras creates soft links it does it via the real path rather than the chroot.  :-(  
# Work around here.
rm /usr/bin/telnet /usr/bin/ftpget /usr/bin/ftpput /usr/bin/tftp 
ln -s /bin/busybox-extras /usr/bin/telnet
ln -s /bin/busybox-extras /usr/bin/ftpget
ln -s /bin/busybox-extras /usr/bin/ftpput
ln -s /bin/busybox-extras /usr/bin/tftp

rm /usr/sbin/dnsd /usr/sbin/fakeidentd /usr/sbin/ftpd /usr/sbin/inetd /usr/sbin/tftpd /usr/sbin/udhcpd /usr/sbin/telnetd
ln -s /bin/busybox-extras /usr/sbin/dnsd
ln -s /bin/busybox-extras /usr/sbin/fakeidentd
ln -s /bin/busybox-extras /usr/sbin/ftpd
ln -s /bin/busybox-extras /usr/sbin/inetd
ln -s /bin/busybox-extras /usr/sbin/telnetd
ln -s /bin/busybox-extras /usr/sbin/tftpd
ln -s /bin/busybox-extras /usr/sbin/udhcpd

# Update/install a few key files

echo
echo "Updating a few key files"

# Set a hostname (Can't currently set hostname)
# cp Files/hostname /etc

# Fake interfaces file
cp Files/interfaces /etc/network

# Move sshd to port 1022 to avoid issues
cp Files/sshd_config /etc/ssh

# /etc/init.d/networking keeps getting screwed up for unknown reasons.  
# Mitigate
mkdir /root/init.d
cp Files/init.d/* /root/init.d

# Remove extra unused vty's, make OpenRC work
cp Files/inittab /etc

# Custom MOTD/issue
rm /etc/motd
cp Files/motd /etc
rm /etc/issue
cp Files/issue /etc

# Sudoers stuff
rm /etc/sudoers # Don't know why this is needed, but it is
cp Files/sudoers /etc

# Root .profile.  
cp Files/profile /etc/profile

# Add some simple scripts
cp Files/bin/* /usr/local/bin

mkdir -p /usr/local/sbin
cp Files/sbin/* /usr/local/sbin

# Make a link so that showip can also be 'myip'
ln /usr/local/bin/showip /usr/local/bin/myip

# Copy our AOK_VARS to /usr/local/etc for use by /usr/local/bin scripts
mkdir /usr/local/etc
#chmod 666 /usr/local/etc
cp AOK_VARS /usr/local/etc

chmod +x /usr/local/bin/*

echo
echo "Creating the ish user"

useradd -s /bin/bash ish

# For some reason useradd doesn't create the home dir?
mkdir -p /home/ish
chown ish.ish /home/ish

# Add dot files for ish
cp Files/bash_profile /home/ish/.bash_profile; chown ish.ish /home/ish/.bash_profile
ln -s /home/ish/.bash_profile /home/ish/.bashrc
chown ish.ish /home/ish/.bashrc
cp Files/zshrc /home/ish/.zshrc; chown ish.ish /home/ish/.zshrc
cp Files/vimrc /home/ish/.vimrc; chown ish.ish /home/ish/.vimrc
# Copy to root as well
cp Files/bash_profile /root/.bash_profile
ln -s /root/.bash_profile /root/.bashrc
cp Files/zshrc /root/.zshrc
cp Files/vimrc /root/.vimrc

# shadow fle with blank ish password
cp Files/shadow /etc

echo

# Copy some documentation to the ish user home directory

echo 
echo "Copying Docs"
mkdir /home/ish/Docs
cp -r Docs/* /home/ish/Docs
chown -R ish.ish /home/ish/Docs

# Networking, hostname and possibly others can't start because of 
# current limitations in iSH So we fake it out
rm /etc/init.d/networking
cp Files/init.d/* /etc/init.d

# /dev/null ends up with weird perms for some reason.  Fix
chmod 777 /dev/null

# Let's bypass login to implement a more traditional login 
# experience.  By default the login wrapper will loop, meaning
# Another login prompt will be issued on exit.
# login_single can be copied to /bin/login to cause iSH
# to exit on shell termination instead
#pushd .
#cd Files/login
#cp Files/login/login_* Files
#popd

mv /bin/login /bin/login.alpine
cp Files/login.loop /bin/login

cp Files/login.loop /bin
cp Files/login.once /bin

chmod +x /bin/login.alpine
chmod +x /bin/login.loop
chmod +x /bin/login.once
chmod +x /bin/login
cp Files/tmux.conf /home/ish/.tmux.conf
chown ish.ish /home/ish/.tmux.conf
cp Files/tmux.conf /root/.tmux.conf

# I want vim to be vi, aliasing isn't working for some reason
# /usr/local/bin is first in the path by default, so...
ln /usr/bin/vim /usr/local/bin/vi

# Enable the utmp stuff (When it works, which is not now)
# rc-update add s6 default; rc-update add utmps default

# echo "Fixing Timezone stuff the ugly but simple way"
# mkdir -p /usr/share/zoneinfo
# zcat Files/fix_tz.tgz | (cd /usr/share/zoneinfo;tar xf -)
# chmod -R 755 /usr/share/zoneinfo

# Set TZ to east coast US, because that is where I am
ln /usr/share/zoneinfo/America/New_York /etc/localtime
echo "America/New_York" >  /etc/timezone
date

# /dev/null seems to be missing or broken sometimes
rm /dev/null
mknod /dev/null c 1 3
chmod 666 /dev/null

# Change roots shell
sed -i 's/\/bin\/ash$/\/bin\/bash/' /etc/passwd

echo "Enabling openrc"

mkdir /run/openrc
touch /run/openrc/softlevel
openrc-init

echo

echo "Enabling openrc run services"

# Enable dcron (Doesn't actually stick for some reason)
#rc-update add syslog-ng
rc-update add dcron

# Daemon to reduce odds of ish getting killed when running in the background
rc-update add runbg

echo "Creating First Boot File in /etc"

touch /etc/FIRSTBOOT

# Make a directory to later mount the iCloud drive on
mkdir /iCloud

echo 

echo "Making AOK Version file in /etc"

echo $AOK_VERSION > /etc/aok_release

echo "Done"

echo
